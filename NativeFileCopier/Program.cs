using Edt.Bond.Migration.Reconciliation.Framework;
using Edt.Bond.Migration.Reconciliation.Framework.Logging;
using Edt.Bond.Migration.Reconciliation.Framework.Repositories;
using Edt.Bond.Migration.Reconciliation.Framework.Services;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace NativeFileCopier
{
    class Program
    {
        static void Main(string[] args)
        {
            var missingIds = new List<string>()
            {
             "104861317"
,"105080763"
,"105080772"
,"105082347"
,"105082357"
,"104861169"
,"104890123"
,"104890355"
,"104890350"
,"104875232"
,"104890315"
,"104890313"
,"104890428"
,"105152815"
,"104886622"
,"104890015"
,"104889418"
,"104889421"
,"104889786"
,"104889788"
,"104888621"
,"104888645"
,"105109074"
,"105109075"
,"104888699"
,"105150109"
,"104861952"
,"105150126"
,"105150133"
,"104882000"
,"104888540"
,"104888532"
,"104888516"
,"104888524"
,"104888528"
,"104888470"
,"104888489"
,"104888494"
,"104888553"
,"104888559"
,"104888561"
,"104888573"
,"104888577"
,"104888352"
,"104891030"
,"104891023"
,"104891024"
,"104888342"
,"104888318"
,"104888337"
,"104888308"
,"105082343"
,"105108277"
,"104890871"
,"105082030"
,"105082038"
,"104864179"
,"104888777"
,"104888781"
,"104888784"
,"104888799"
,"104864084"
,"104888805"
,"104888857"
,"104888864"
,"104888876"
,"104888885"
,"104864011"
,"104864005"
,"104881984"
,"104887005"
,"104887007"
,"104888919"
,"104888921"
,"104888932"
,"104888944"
,"104865525"
,"105108192"
,"104881524"
,"104881536"
,"104881559"
,"104882668"
,"104882672"
,"105080755"
,"105080758"
,"105108193"
,"104890117"
,"104890119"
,"104890192"
,"104890207"
,"104890209"
,"104890358"
,"104890986"
,"105080766"
,"105080752"
,"105080769"
,"105080775"
,"104890121"
,"104890353"
,"104869209"
,"104869214"
,"104869192"
,"105082025"
,"105082338"
,"105167326"
,"105167336"
,"104888717"
,"104890877"
,"104890854"
,"104890881"
,"104890869"
,"104862801"
,"104861360"
,"104862758"
,"105080736"
,"105082044"
,"104889785"
,"104891026"
,"104891310"
,"104889420"
,"104890503"
,"105109077"
,"104889787"
,"104891022"
,"104891027"
,"105082033"
,"105082334"
,"104890433"
,"104891314"
,"105108805"
,"105108806"
,"105082036"
,"105094702"
,"104888836"
,"104888832"
,"104888834"
,"104888850"
,"104888862"
,"104888866"
,"104888889"
,"104861335"
,"104861339"
,"104888911"
,"104888915"
,"104888934"
,"104888940"
,"104888946"
,"104887418"
,"104861347"
,"105085167"
,"104866870"
,"104866858"
,"104866895"
,"105150140"
,"105081086"
,"105081104"
,"105167343"
,"105167324"
,"104875228"
,"104881518"
,"104881531"
,"104888715"
,"104888716"
,"105100018"
,"105084588"
,"105108246"
,"104886851"
,"105103442"
,"104890875"
,"104869200"
,"105085152"
,"105107289"
,"104882029"
,"104882023"
,"104889929"
,"104889931"
,"104889879"
,"105167332"
,"105167338"
,"104888788"
,"104888803"
,"104888859"
,"104888846"
,"104888874"
,"104888878"
,"104888840"
,"104888848"
,"104888855"
,"104888870"
,"104888882"
,"104861310"
,"104888958"
,"104861321"
,"104861350"
,"104887010"
,"104861373"
,"104861379"
,"104861160"
,"104886639"
,"104869197"
,"104888625"
,"104888695"
,"104888563"
,"104888571"
,"104888511"
,"104888498"
,"104888555"
,"104888569"
,"104888475"
,"104888313"
,"104889871"
,"104889889"
,"105099990"
,"104880276"
,"104864206"
,"104864210"
,"104888774"
,"104888797"
,"104888790"
,"105100001"
,"104880104"
,"104888801"
,"104888853"
,"104888838"
,"104888842"
,"104888872"
,"104888868"
,"104888887"
,"104888880"
,"104888950"
,"104888952"
,"104888954"
,"104861327"
,"104888913"
,"104881990"
,"104881994"
,"104888917"
,"104888942"
,"104888923"
,"104888925"
,"104888936"
,"104888938"
,"104888948"
,"104861383"
,"104866874"
,"104885794"
,"104865607"
,"104862109"
,"104881510"
,"104882665"
,"104882682"
,"104882676"
,"104882678"
,"104860165"
,"104885468"
,"104888623"
,"104888693"
,"104888697"
,"104889698"
,"104888507"
,"104882006"
,"104888520"
,"104888579"
,"104888581"
,"104888567"
,"104888583"
,"104882036"
,"104888480"
,"104888485"
,"104889906"
,"104889908"
,"104889927"
,"104889925"
,"104889922"
,"104888362"
,"104889875"
,"104889877"
,"104889869"
,"104863988"
,"104889865"
,"104889891"
,"104888347"
,"104888323"
,"104888327"
,"104888332"
,"105099986"
,"105080378"
,"105080383"
,"104888712"
,"105082354"
,"104864219"
,"104890855"
,"104890879"
,"104865520"
,"105107291"
,"104889417"
,"104866863"
,"105109073"
,"104890113"
,"105150112"
,"104890190"
,"105150116"
,"105150123"
,"105150119"
,"105082027"
,"105082042"
,"105108637"
,"105099491"
,"104860159"
,"105167345"
,"105167357"
,"105167348"
,"105167339"
,"105167329"
,"105167362"
,"105167344"
,"105167328"
,"105167351"
,"139140004"
,"152320017"
,"152320018"
,"152320019"
,"152320021"
,"152320022"
,"152320020"
,"152320024"
,"152320026"
,"152320025"
,"152320027"
,"152320023"
,"152320031"
,"152320034"
,"152320035"
,"152320032"
,"152320028"
,"152320037"
,"152320039"
,"152320045"
,"152320043"
,"152320049"
,"152320047"
,"152320041"
,"152320051"
,"152320033"
,"152320036"
,"152320055"
,"152320057"
,"152320053"
,"152320040"
,"152320042"
,"152320044"
,"152320038"
,"152320048"
,"152320052"
,"152320054"
,"152320046"
,"152320058"
,"152320056"
,"152320050"
,"152320059"
,"152320061"
,"152320062"
,"152320060"
            };


            foreach (var missing in missingIds)
            {
                var natives = new NativeFileFinder().GetFiles(missing);
                var content = EdtDocumentRepository.GetDocumentContentInfo(missing).SingleOrDefault(x => x.PageLabel == "NATIVE" && x.PageNum == 1);

                if (content != null) {
                    var extnesion = content.FileExtension.Trim();
                    var native = natives.SingleOrDefault(x => $"{x.Extension}".Equals(extnesion, StringComparison.InvariantCultureIgnoreCase));

                    var parititon = (Math.Floor((double) content.DocumentID / 5000) * 5000).ToString();
                    var docfolder = content.DocumentID.ToString();
                    var filename = $"{content.DocumentID}_NATIVE{content.FileExtension}";

                    
                    var destination = Path.Combine(Settings.EdtCfsDirectory, $"Site01_Case{Settings.EdtCaseId}", "Docs", parititon, docfolder, filename.Trim());

                    try
                    {
                        if(!File.Exists(destination))
                            File.Copy(native.FullName, destination, false);
                    }
                    catch(Exception)
                    {
                        DebugLogger.Instance.WriteLine($"{missing} failed to copy record");
                    }
                }
                else
                {
                    DebugLogger.Instance.WriteLine($"{missing} not got content record");
                }
            }

            
        }
    }
}
